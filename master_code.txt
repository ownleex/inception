======================================================
           CONSOLIDATION DE TOUS LES FICHIERS
======================================================
G√©n√©r√© le: ven. 11 juil. 2025 22:37:08 CEST
R√©pertoire: /home/ayarmaya/Documents/inception
======================================================


======================================================
FICHIER: Makefile
======================================================

# Variable pour le chemin des donn√©es avec valeur par d√©faut
VOLPATH		= $(HOME)/data
DOCKPATH	= ./srcs/docker-compose.yml
DOMAIN		= ayarmaya.42.fr

all : add-host
	@echo "Cr√©ation des dossiers dans: $(VOLPATH)"
	@sudo mkdir -p $(VOLPATH)/mariadb
	@sudo mkdir -p $(VOLPATH)/wordpress
	@sudo chmod 777 $(VOLPATH)/mariadb
	@sudo chmod 777 $(VOLPATH)/wordpress
	@HOME=$(HOME) sudo -E docker-compose -f $(DOCKPATH) up -d

clean : remove-host
	@HOME=$(HOME) sudo -E docker-compose -f ./srcs/docker-compose.yml down -v
	@sudo rm -rf $(VOLPATH)

fclean : clean
	@sudo docker system prune -a -f --volumes
	@sudo docker network prune -f

re : fclean all

add-host :
	@echo "Ajout de $(DOMAIN) au fichier hosts..."
	@if ! grep -q "$(DOMAIN)" /etc/hosts; then \
		echo "127.0.0.1	$(DOMAIN)" | sudo tee -a /etc/hosts > /dev/null; \
		echo "$(DOMAIN) ajout√© √† /etc/hosts"; \
	else \
		echo "$(DOMAIN) existe d√©j√† dans /etc/hosts"; \
	fi

remove-host :
	@echo "Suppression de $(DOMAIN) du fichier hosts..."
	@if grep -q "$(DOMAIN)" /etc/hosts; then \
		sudo sed -i '/$(DOMAIN)/d' /etc/hosts; \
		echo "$(DOMAIN) supprim√© de /etc/hosts"; \
	else \
		echo "$(DOMAIN) n'existe pas dans /etc/hosts"; \
	fi

show-hosts :
	@echo "Contenu actuel de /etc/hosts concernant $(DOMAIN):"
	@grep "$(DOMAIN)" /etc/hosts || echo "Aucune entr√©e trouv√©e pour $(DOMAIN)"

show-path :
	@echo "Chemin des donn√©es actuel: $(VOLPATH)"

mysql:
	@echo "üîê Connexion MySQL (mot de passe requis)..."
	@docker exec -it mariadb mysql -u root -p

ftp-test:
	@echo "üîó Test de connexion FTP..."
	@echo "Utilisateur: $(shell grep FTP_USER srcs/.env | cut -d'=' -f2)"
	@echo "Connectez-vous avec: ftp localhost"

logs:
	@docker-compose -f $(DOCKPATH) logs -f

logs-ftp:
	@docker logs ftp -f

.PHONY: all clean fclean re add-host remove-host show-hosts show-path mysql ftp-test logs logs-ftp
======================================================


======================================================
FICHIER: srcs/docker-compose.yml
======================================================

version: '3.8'

services:
    mariadb:
        container_name: mariadb
        networks:
            - inceptionnetwork
        expose:
            - "3306"
        env_file:
            - .env
        build: requirements/mariadb
        restart: on-failure
        volumes:
            - mariadb:/var/lib/mysql

    nginx:
        container_name: nginx
        networks:
            - inceptionnetwork
        ports:
            - "443:443"
        build: requirements/nginx
        depends_on:
            - wordpress
        restart: on-failure
        volumes:
            - wordpress:/var/www/wordpress

    wordpress:
        container_name: wordpress
        networks:
            - inceptionnetwork
        expose:
            - "9000"
        build: requirements/wordpress
        env_file:
            - .env
        depends_on:
            - mariadb
        restart: on-failure
        volumes:
            - wordpress:/var/www/wordpress

networks:
    inceptionnetwork:
        driver: bridge

volumes:
    mariadb:
        driver: local
        driver_opts:
            type: 'none'
            o: 'bind'
            device: '${HOME}/data/mariadb/'
    wordpress:
        driver: local
        driver_opts:
            type: 'none'
            o: 'bind'
            device: '${HOME}/data/wordpress/'
======================================================


======================================================
FICHIER: srcs/requirements/nginx/Dockerfile
======================================================

FROM debian:bullseye

RUN apt update -y && apt upgrade -y && apt install -y nginx curl openssl

RUN mkdir -p /etc/nginx/ssl && mkdir -p /var/run/nginx
RUN openssl req -x509 -nodes -out /etc/nginx/ssl/inception.crt -keyout /etc/nginx/ssl/inception.key -subj "/C=FR/ST=PACA/L=Nice/O=42/OU=42/CN=ayarmaya.42.fr/UID=ayarmaya"
RUN chmod 755 /var/www/html && chown -R www-data:www-data /var/www/html
RUN mv /var/www/html/index.nginx-debian.html /var/www/html/index_de_base_nginx.html
RUN chown -R www-data:www-data /var/www/html

COPY conf/nginx.conf /etc/nginx/nginx.conf

CMD ["nginx", "-g", "daemon off;"]
======================================================


======================================================
FICHIER: srcs/requirements/nginx/conf/nginx.conf
======================================================

events {
}

http {
    
    include /etc/nginx/mime.types;
    
	upstream php-fpm {
        server wordpress:9000;
    }

    server {
        listen 443 ssl;
		ssl_protocols TLSv1.2 TLSv1.3;
        ssl_certificate /etc/nginx/ssl/inception.crt;
        ssl_certificate_key /etc/nginx/ssl/inception.key;

		root /var/www/wordpress;
        server_name ayarmaya.42.fr;
		index index.php index.html index.htm;

        location / {
            try_files $uri $uri/ /index.php?$args;
        }

        location ~ \.php$ {
            include snippets/fastcgi-php.conf;
            fastcgi_pass php-fpm;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include fastcgi_params;
        }

        # Optionnel : Gestion des fichiers statiques avec cache
        location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            try_files $uri =404;
        }

        # S√©curit√© : Emp√™cher l'acc√®s aux fichiers sensibles
        location ~ /\. {
            deny all;
        }
        
        location ~ /wp-config\.php {
            deny all;
        }
    }
}
======================================================


======================================================
FICHIER: srcs/requirements/ftp/Dockerfile
======================================================

FROM debian:bullseye

RUN apt-get update && apt-get upgrade -y && \
    apt-get install -y vsftpd

# Cr√©er le r√©pertoire de configuration et les scripts
RUN mkdir -p /var/run/vsftpd/empty

COPY conf/vsftpd.conf /etc/vsftpd.conf
COPY tools/ftp_setup.sh /usr/local/bin/

RUN chmod +x /usr/local/bin/ftp_setup.sh

EXPOSE 21 20 21000-21010

CMD ["bash", "/usr/local/bin/ftp_setup.sh"]
======================================================


======================================================
FICHIER: srcs/requirements/ftp/conf/vsftpd.conf
======================================================

# Configuration vsftpd pour le serveur FTP
listen=YES
listen_ipv6=NO

# CRUCIAL : Rester en foreground pour Docker
background=NO

# D√©sactiver l'acc√®s anonyme
anonymous_enable=NO

# Activer les utilisateurs locaux
local_enable=YES
write_enable=YES
local_umask=022

# Messages et logs
dirmessage_enable=YES
use_localtime=YES
xferlog_enable=YES
xferlog_file=/var/log/vsftpd.log
xferlog_std_format=YES

# Connexions
connect_from_port_20=YES
ftpd_banner=Bienvenue sur le serveur FTP Inception

# S√©curit√© - emprisonner les utilisateurs dans leur r√©pertoire home
chroot_local_user=YES
allow_writeable_chroot=YES
secure_chroot_dir=/var/run/vsftpd/empty

# Configuration PAM
pam_service_name=vsftpd

# Mode passif pour les connexions derri√®re NAT/firewall
pasv_enable=YES
pasv_min_port=21000
pasv_max_port=21010
# Supprimer pasv_address pour Docker

# Permissions
file_open_mode=0666
local_max_rate=0

# Timeouts
idle_session_timeout=300
data_connection_timeout=120

# Autres options de s√©curit√©
ssl_enable=NO
userlist_enable=NO
======================================================


======================================================
FICHIER: srcs/requirements/ftp/tools/ftp_setup.sh
======================================================

#!/bin/bash

set -e

echo "Configuration du serveur FTP..."

# Cr√©er l'utilisateur FTP s'il n'existe pas
if ! id "$FTP_USER" &>/dev/null; then
    echo "Cr√©ation de l'utilisateur FTP: $FTP_USER"
    useradd -m -d /var/www/wordpress -s /bin/bash "$FTP_USER"
    echo "$FTP_USER:$FTP_PASSWORD" | chpasswd
else
    echo "L'utilisateur $FTP_USER existe d√©j√†"
fi

# S'assurer que l'utilisateur a acc√®s au r√©pertoire WordPress
chown -R "$FTP_USER:$FTP_USER" /var/www/wordpress
chmod -R 755 /var/www/wordpress

# Cr√©er le r√©pertoire de log s'il n'existe pas
mkdir -p /var/log
touch /var/log/vsftpd.log

# Cr√©er le r√©pertoire secure_chroot_dir s'il n'existe pas
mkdir -p /var/run/vsftpd/empty

echo "D√©marrage du serveur FTP..."
exec /usr/sbin/vsftpd /etc/vsftpd.conf
======================================================


======================================================
FICHIER: srcs/requirements/mariadb/Dockerfile
======================================================

FROM debian:bullseye

RUN apt update -y && apt upgrade -y && apt install mariadb-server sudo -y

COPY conf/50-server.cnf /etc/mysql/mariadb.conf.d/
COPY tools/init_db.sh /usr/local/bin/

RUN mkdir -p /var/run/mysqld && chown -R mysql:mysql /var/run/mysqld

RUN chmod +x /usr/local/bin/init_db.sh

ENTRYPOINT ["bash", "/usr/local/bin/init_db.sh"]
======================================================


======================================================
FICHIER: srcs/requirements/mariadb/conf/50-server.cnf
======================================================

[mysqld]
datadir = /var/lib/mysql
socket = /var/run/mysqld/mysqld.sock
bind_address = 0.0.0.0
port = 3306
user = mysql
======================================================


======================================================
FICHIER: srcs/requirements/mariadb/tools/init_db.sh
======================================================

#!/bin/bash

set -e

# V√©rifier les permissions
chown -R mysql:mysql /var/lib/mysql

# Initialisation manuelle de la base si n√©cessaire
if [ ! -d "/var/lib/mysql/mysql" ]; then
    echo "Initialisation de la base de donn√©es..."
    mysql_install_db --user=mysql --datadir=/var/lib/mysql > /dev/null
fi

# Pr√©parer un script SQL √† injecter lors du d√©marrage
cat << EOF > /tmp/init.sql
CREATE DATABASE IF NOT EXISTS \`${DB_NAME}\`;
CREATE USER IF NOT EXISTS \`${DB_USER}\`@'%' IDENTIFIED BY '${DB_PASSWORD}';
GRANT ALL PRIVILEGES ON \`${DB_NAME}\`.* TO '${DB_USER}'@'%';
FLUSH PRIVILEGES;
EOF

# D√©marrer MariaDB en tant que PID 1 avec le script d'init
echo "Lancement de MariaDB avec injection SQL..."
exec mysqld --init-file=/tmp/init.sql --datadir=/var/lib/mysql

======================================================


======================================================
FICHIER: srcs/requirements/wordpress/Dockerfile
======================================================

FROM debian:bullseye

RUN apt-get update -y && apt-get upgrade -y && \
    apt-get install -y \
      php7.4 \
      php7.4-fpm \
      php7.4-mysql \
      php7.4-gd \
      wget \
      mariadb-client

RUN	mkdir -p /etc/conf/ && mkdir -p /run/php && chown www-data:www-data /run/php && \
    wget https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar && \
    chmod +x wp-cli.phar && mv -f wp-cli.phar /usr/local/bin/wp

# T√©l√©charger la derni√®re version de WordPress
RUN	wget https://fr.wordpress.org/latest-fr_FR.tar.gz -P /var/www && \
	cd /var/www && tar -xzf latest-fr_FR.tar.gz && rm latest-fr_FR.tar.gz && \
	chown -R www-data:www-data /var/www/wordpress

COPY /tools/wp.sh /etc/conf/
COPY /conf/www.conf /etc/php/7.4/fpm/pool.d/www.conf

RUN chmod +x /etc/conf/wp.sh

CMD ["bash", "/etc/conf/wp.sh"]
======================================================


======================================================
FICHIER: srcs/requirements/wordpress/conf/www.conf
======================================================

[www]
user = www-data
group = www-data
clear_env = no
listen = 0.0.0.0:9000
listen.owner = www-data
listen.group = www-data
pm = dynamic
pm.max_children = 25
pm.start_servers = 5
pm.min_spare_servers = 1
pm.max_spare_servers = 10
======================================================


======================================================
FICHIER: srcs/requirements/wordpress/tools/wp.sh
======================================================

#!/bin/bash

# Cr√©er les dossiers n√©cessaires
mkdir -p /run/php
chown -R www-data:www-data /run/php
chown -R www-data:www-data /var/www/wordpress

# Cr√©er wp-config.php depuis le sample s'il n'existe pas
if [ ! -f /var/www/wordpress/wp-config.php ]; then
    cp /var/www/wordpress/wp-config-sample.php /var/www/wordpress/wp-config.php
fi

# Configuration de la base de donn√©es dans wp-config.php
if [ -n "$DB_NAME" ]; then
	sed -i "s/database_name_here/$DB_NAME/g" /var/www/wordpress/wp-config.php
	if [ -n "$DB_USER" ]; then
		sed -i "s/username_here/$DB_USER/g" /var/www/wordpress/wp-config.php
		if [ -n "$DB_PASSWORD" ]; then
    		sed -i "s/password_here/$DB_PASSWORD/g" /var/www/wordpress/wp-config.php
		fi
	fi
fi

sed -i "s/localhost/mariadb/g" /var/www/wordpress/wp-config.php

# Attendre que MariaDB soit pr√™te
echo "Attente de la base de donn√©es..."
until wp db check --allow-root --path=/var/www/wordpress; do
    sleep 5
    echo "Retry database connection..."
done

# Installation de WordPress si pas d√©j√† fait
if ! wp core is-installed --allow-root --path=/var/www/wordpress; then
    echo "Installation de WordPress..."
    wp core install --allow-root \
                    --path=$WP_PATHWORDPRESS \
                    --url=https://$DOMAIN \
                    --title="$WP_TITLE" \
                    --admin_user=$WP_ADMINUSER \
                    --admin_password=$WP_ADMINPASSWORD \
                    --admin_email=$WP_ADMINEMAIL

    # Configurer la timezone WordPress en Europe/Paris
    wp option update timezone_string "Europe/Paris" --allow-root --path=/var/www/wordpress


    wp user create --allow-root $WP_USER $WP_USEREMAIL \
                   --path=$WP_PATHWORDPRESS \
                   --role=$WP_ROLE \
                   --user_pass=$WP_USERPASSWORD
    
    echo "WordPress install√© avec succ√®s !"
else
    echo "WordPress est d√©j√† install√©."
fi

# Installation et activation du th√®me AnyNews
echo "Installation du th√®me AnyNews ..."
wp theme install anynews  --allow-root --path=/var/www/wordpress --activate
echo "Th√®me AnyNews  activ√© avec succ√®s !"

chown -R www-data:www-data /var/www/wordpress/wp-content/uploads
chown -R www-data:www-data /var/www/wordpress/wp-content/upgrade

# D√©marrer PHP-FPM en premier plan
echo "D√©marrage de PHP-FPM..."
exec /usr/sbin/php-fpm7.4 -F -R
======================================================


======================================================
                    R√âSUM√â
======================================================
Nombre de fichiers trait√©s: 13
Nombre total de lignes: 418
Date de g√©n√©ration: ven. 11 juil. 2025 22:37:09 CEST
======================================================
