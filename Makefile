# Variables
COMPOSE_FILE	= ./srcs/docker-compose.yml
DOCKER_COMPOSE	= docker compose
DATA_PATH		= /home/$(USER)/data

# Couleurs
GREEN = \033[0;32m
YELLOW = \033[0;33m
RED = \033[0;31m
NC = \033[0m

.PHONY: all build up down clean fclean re logs status help test-mariadb

# Construction et lancement de MariaDB
all: build

# Cr√©ation des r√©pertoires et construction
build:
	@echo "$(YELLOW)üìÅ Cr√©ation du r√©pertoire MariaDB...$(NC)"
	@mkdir -p $(DATA_PATH)/mariadb
	@echo "$(YELLOW)üî® Construction et lancement de MariaDB...$(NC)"
	@$(DOCKER_COMPOSE) -f $(COMPOSE_FILE) up --build -d mariadb
	@echo "$(GREEN)‚úÖ MariaDB lanc√© avec succ√®s !$(NC)"
	@echo "$(YELLOW)‚è≥ Attente du d√©marrage de MariaDB...$(NC)"
	@sleep 10
	@make test-mariadb

# Lancement simple de MariaDB (sans rebuild)
up:
	@echo "$(GREEN)üöÄ Lancement de MariaDB...$(NC)"
	@$(DOCKER_COMPOSE) -f $(COMPOSE_FILE) up -d mariadb

# Arr√™t de MariaDB
down:
	@echo "$(RED)üõë Arr√™t de MariaDB...$(NC)"
	@$(DOCKER_COMPOSE) -f $(COMPOSE_FILE) down

# Arr√™t forc√© de MariaDB
kill:
	@echo "$(RED)üíÄ Arr√™t forc√© de MariaDB...$(NC)"
	@$(DOCKER_COMPOSE) -f $(COMPOSE_FILE) kill mariadb

# Nettoyage des containers et volumes Docker
clean:
	@echo "$(YELLOW)üßπ Nettoyage de MariaDB...$(NC)"
	@$(DOCKER_COMPOSE) -f $(COMPOSE_FILE) down -v

# Nettoyage complet (containers + donn√©es locales)
fclean: clean
	@echo "$(RED)üóëÔ∏è  Suppression des donn√©es MariaDB...$(NC)"
	@rm -rf $(DATA_PATH)/mariadb
	@echo "$(RED)üßΩ Nettoyage complet du syst√®me Docker...$(NC)"
	@docker system prune -a -f --volumes
	@docker network prune -f
	@echo "$(RED)‚ö†Ô∏è  Nettoyage complet termin√© !$(NC)"

# Reconstruction compl√®te
re: fclean all

# Affichage des logs de MariaDB
logs:
	@echo "$(YELLOW)üìã Logs de MariaDB:$(NC)"
	@$(DOCKER_COMPOSE) -f $(COMPOSE_FILE) logs -f mariadb

# Status de MariaDB
status:
	@echo "$(YELLOW)üìä Status de MariaDB:$(NC)"
	@$(DOCKER_COMPOSE) -f $(COMPOSE_FILE) ps mariadb

# Shell dans MariaDB
shell:
	@echo "$(GREEN)üîß Ouverture du shell MariaDB...$(NC)"
	@docker exec -it mariadb /bin/bash

# Connexion MySQL directe
mysql:
	@echo "$(GREEN)üîê Connexion MySQL (mot de passe requis)...$(NC)"
	@docker exec -it mariadb mysql -u root -p

# Connexion MySQL avec utilisateur WordPress
mysql-wp:
	@echo "$(GREEN)üîê Connexion MySQL avec utilisateur WordPress...$(NC)"
	@docker exec -it mariadb mysql -u $(shell grep MYSQL_USER srcs/.env | cut -d '=' -f2) -p$(shell grep MYSQL_PASSWORD srcs/.env | cut -d '=' -f2)

# Test complet de MariaDB
test-mariadb:
	@echo "$(GREEN)üîç === TEST DE MARIADB ===$(NC)"
	@echo "$(YELLOW)üìä Status du container:$(NC)"
	@$(DOCKER_COMPOSE) -f $(COMPOSE_FILE) ps mariadb
	@echo ""
	@echo "$(YELLOW)üîå Test de connexion avec root:$(NC)"
	@docker exec mariadb mysql -u root -p$(shell grep MYSQL_ROOT_PASSWORD srcs/.env | cut -d '=' -f2) -e "SELECT 'Connexion root OK' as Status;" 2>/dev/null && echo "$(GREEN)‚úÖ Connexion root r√©ussie$(NC)" || echo "$(RED)‚ùå √âchec connexion root$(NC)"
	@echo ""
	@echo "$(YELLOW)üîå Test de connexion utilisateur WordPress:$(NC)"
	@docker exec mariadb mysql -u $(shell grep MYSQL_USER srcs/.env | cut -d '=' -f2) -p$(shell grep MYSQL_PASSWORD srcs/.env | cut -d '=' -f2) -e "SELECT 'Connexion WordPress OK' as Status;" 2>/dev/null && echo "$(GREEN)‚úÖ Connexion WordPress r√©ussie$(NC)" || echo "$(RED)‚ùå √âchec connexion WordPress$(NC)"
	@echo ""
	@echo "$(YELLOW)üóÑÔ∏è  Bases de donn√©es disponibles:$(NC)"
	@docker exec mariadb mysql -u root -p$(shell grep MYSQL_ROOT_PASSWORD srcs/.env | cut -d '=' -f2) -e "SHOW DATABASES;" 2>/dev/null || echo "$(RED)‚ùå Impossible d'afficher les bases$(NC)"
	@echo ""
	@echo "$(YELLOW)üë• Utilisateurs MySQL:$(NC)"
	@docker exec mariadb mysql -u root -p$(shell grep MYSQL_ROOT_PASSWORD srcs/.env | cut -d '=' -f2) -e "SELECT User, Host FROM mysql.user;" 2>/dev/null || echo "$(RED)‚ùå Impossible d'afficher les utilisateurs$(NC)"

# Test de performance MariaDB
test-perf:
	@echo "$(GREEN)‚ö° Test de performance MariaDB...$(NC)"
	@docker exec mariadb mysql -u root -p$(shell grep MYSQL_ROOT_PASSWORD srcs/.env | cut -d '=' -f2) -e "SELECT BENCHMARK(1000000, MD5('test'));" 2>/dev/null && echo "$(GREEN)‚úÖ Test de performance OK$(NC)" || echo "$(RED)‚ùå √âchec test de performance$(NC)"

# Red√©marrage rapide
restart: down up

# Aide sp√©cifique MariaDB
help:
	@echo "$(GREEN)=== COMMANDES MARIADB ===$(NC)"
	@echo "$(YELLOW)make$(NC) ou $(YELLOW)make all$(NC)        - Construction et lancement MariaDB"
	@echo "$(YELLOW)make build$(NC)              - Construction avec test automatique"
	@echo "$(YELLOW)make up$(NC)                 - Lancement MariaDB"
	@echo "$(YELLOW)make down$(NC)               - Arr√™t MariaDB"
	@echo "$(YELLOW)make kill$(NC)               - Arr√™t forc√© MariaDB"
	@echo "$(YELLOW)make restart$(NC)            - Red√©marrage MariaDB"
	@echo "$(YELLOW)make logs$(NC)               - Logs de MariaDB"
	@echo "$(YELLOW)make status$(NC)             - Status de MariaDB"
	@echo "$(YELLOW)make shell$(NC)              - Shell dans le container MariaDB"
	@echo "$(YELLOW)make mysql$(NC)              - Connexion MySQL root (interactive)"
	@echo "$(YELLOW)make mysql-wp$(NC)           - Connexion MySQL utilisateur WordPress"
	@echo "$(YELLOW)make test-mariadb$(NC)       - Test complet de MariaDB"
	@echo "$(YELLOW)make test-perf$(NC)          - Test de performance"
	@echo "$(YELLOW)make clean$(NC)              - Nettoyage containers et volumes"
	@echo "$(YELLOW)make fclean$(NC)             - Nettoyage complet (‚ö†Ô∏è  supprime tout)"
	@echo "$(YELLOW)make re$(NC)                 - Reconstruction compl√®te"